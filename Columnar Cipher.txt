# Columnar Cipher
import math

plain_text = input("Enter Plain Text: ")
cols = int(input("Enter number of Columns: "))
rows = math.ceil(len(plain_text) / cols)
# key should be any pattern between 0 to (cols-1) of length cols
key = int(input("Enter Key: "))

def encrypt(text, c, r, temp_key):
    container = [[" "]*c for _ in range(r)]
    k = 0
    encipher = ""
    text = text + "x" * ((c * r) - len(text))
    for i in range(rows):
        for j in range(cols):
            container[i][j] = text[k]
            k += 1
    for i in container:
        print(i)
    for i in str(temp_key):
        for j in range(r):
            encipher += container[j][int(i)]
    return encipher

print("Plain Text: ", plain_text)
encrypted_text = encrypt(plain_text, cols, rows,â€¦
[2:57 pm, 18/03/2023] Harsh Jadhav Ruia: # Columnar Cipher
import math

plain_text = input("Enter Plain Text: ")
cols = int(input("Enter number of Columns: "))
rows = math.ceil(len(plain_text) / cols)
# key should be any pattern between 0 to (cols-1) of length cols
key = int(input("Enter Key: "))

def encrypt(text, c, r, temp_key):
    container = [[" "]*c for _ in range(r)]
    k = 0
    encipher = ""
    text = text + "x" * ((c * r) - len(text))
    for i in range(rows):
        for j in range(cols):
            container[i][j] = text[k]
            k += 1
    for i in container:
        print(i)
    for i in str(temp_key):
        for j in range(r):
            encipher += container[j][int(i)]
    return encipher

print("Plain Text: ", plain_text)
encrypted_text = encrypt(plain_text, cols, rows, key)
print("Encrypted Text: ", encrypted_text)

def decrypt(text, c, r, temp_key):
    container = [[" "]*c for _ in range(r)]
    k = 0
    decipher = ""
    for i in range(cols):
        for j in range(rows):
            container[j][i] = text[k]
            k += 1
    for i in container:
        print(i)
    for i in range(r):
        for j in str(temp_key):
            decipher += container[i][int(j)]
    return decipher

decrypted_text = decrypt(encrypted_text, cols, rows, key)
print("Decrypted Text: ", decrypted_text)